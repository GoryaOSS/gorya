// Code generated by mockery v2.32.4. DO NOT EDIT.

package fake

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// ChangeStatus provides a mock function with given fields: ctx, to, tagKey, tagValue
func (_m *Interface) ChangeStatus(ctx context.Context, to int, tagKey string, tagValue string) error {
	ret := _m.Called(ctx, to, tagKey, tagValue)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, string, string) error); ok {
		r0 = rf(ctx, to, tagKey, tagValue)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewInterface creates a new instance of Interface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *Interface {
	mock := &Interface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
