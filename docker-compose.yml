services:
  redis:
    image: redis:alpine3.18
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - queue:/data
    networks:
      - gorya
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      timeout: 20s
      retries: 10
  mysql:
    image: mysql
    container_name: mysql
    command: --init-file /data/application/init.sql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "my-secret-pw"
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "gorya"
    volumes:
      - db:/var/lib/mysql
      - ./seeds/init.sql:/data/application/init.sql
    networks:
      - gorya
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  gorya-backend:
#    image: ghcr.io/nduyphuong/gorya-backend
    container_name: gorya-backend
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: backend.Dockerfile
    environment:
      GORYA_DB_PASSWORD: my-secret-pw
      GORYA_DB_HOST: mysql
      GORYA_DB_TYPE: mysql
      GORYA_REDIS_ADDR: redis:6379
      GORYA_QUEUE_NAME: gorya
      AWS_ENDPOINT: http://localstack:4566
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - gorya

  gorya-ui:
#    image: ghcr.io/nduyphuong/gorya-ui
    container_name: gorya-ui
    ports:
      - "3000:3000"
    build:
      context: .
      dockerfile: frontend.Dockerfile
    environment:
      NODE_OPTIONS: --openssl-legacy-provider
      GORYA_API_ADDR: http://gorya-backend:8080
    depends_on:
      - gorya-backend
    networks:
      - gorya
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-gorya_localstack}"
    image: localstack/localstack-pro
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-}
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - gorya
networks:
  gorya:
    driver: bridge

volumes:
  queue:
    name: queue
  db:
    name: db
